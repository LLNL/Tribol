// Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and
// other Tribol Project Developers. See the top-level LICENSE file for details.
//
// SPDX-License-Identifier: (MIT)

#ifndef TRIBOL_TYPES_HPP_
#define TRIBOL_TYPES_HPP_

#include <axom/core/Types.hpp>
#include <cstdint>
#include <vector>

#include "axom/core.hpp"

#cmakedefine TRIBOL_USE_SINGLE_PRECISION
#cmakedefine TRIBOL_DATA_DIR "@TRIBOL_DATA_DIR@"
#cmakedefine TRIBOL_USE_MPI
#cmakedefine TRIBOL_USE_UMPIRE
#cmakedefine TRIBOL_USE_RAJA
#cmakedefine BUILD_REDECOMP

#ifdef TRIBOL_USE_MPI
#include "mpi.h"
#endif

namespace tribol
{

#ifdef TRIBOL_USE_MPI

using CommT = MPI_Comm;
#define TRIBOL_COMM_WORLD MPI_COMM_WORLD
#define TRIBOL_COMM_NULL MPI_COMM_NULL

#else

using CommT = int;
#define TRIBOL_COMM_WORLD 0
#define TRIBOL_COMM_NULL -1

#endif

// match index type used in axom (since data is held in axom data structures)
using IndexT = axom::IndexType;

#ifdef TRIBOL_USE_SINGLE_PRECISION

#error "Tribol does not support single precision."
using RealT = float;

#else

using RealT = double;

#endif

template <typename T, int DIM = 1, axom::MemorySpace SPACE = axom::MemorySpace::Dynamic>
using ArrayT = axom::Array<T, DIM, SPACE>;

template <typename T, int DIM = 1, axom::MemorySpace SPACE = axom::MemorySpace::Dynamic>
using ArrayViewT = axom::ArrayView<T, DIM, SPACE>;

template <typename T, int N>
using FixedArrayT = axom::StackArray<T, N>;

constexpr int MAX_NUM_POLY_VERT = 16;     ///< Maximum allowed number of polygon vertices per contact plane
constexpr int MAX_NUM_CELL_NODES = 8;     ///< Maximum allowed number of nodes per cell

#if defined(__clang__)  
  #define RESTRICT __restrict__
  #define RESTRICT_THIS
  #ifndef CONSTEXPRFUNC  
    #define CONSTEXPRFUNC constexpr  
  #endif
#elif defined(__GNUC__)  
  #if defined(__INTEL_COMPILER)
    #define RESTRICT __restrict__
    #define RESTRICT_THIS
    #define CONSTEXPRFUNC
  #else
    #define RESTRICT __restrict__
    #define RESTRICT_THIS
    #define CONSTEXPRFUNC constexpr
  #endif
#elif defined(_WIN32)  
  #define RESTRICT __restrict
  #define RESTRICT_THIS
  #define CONSTEXPRFUNC constexpr  
#endif

#define TRIBOL_UNUSED_VAR AXOM_UNUSED_VAR
#define TRIBOL_UNUSED_PARAM AXOM_UNUSED_PARAM

} // namespace tribol

#endif /* TRIBOL_TYPES_HPP_ */
