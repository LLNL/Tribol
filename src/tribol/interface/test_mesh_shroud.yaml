#
# API for simple tribol test mesh
#
copyright:
  -
  - Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC.
  - Produced at the Lawrence Livermore National Laboratory
  - SPDX-License-Identifier (MIT)

library: TRIBOL_TEST_MESH
cxx_header: tribol/utils/TestUtils.hpp
namespace: tribol

format:
  debug: True
  C_prefix: TRIBOL_TEST_MESH_
  # Any C++ function which returns a string will be wrapped in
  # Fortran as a subroutine with an additional character argument
  # for the result.
  F_string_result_as_arg: name
  F_filename_suffix: F
  F_name_generic: {library_lower}

options:
  C_line_length: 1000
  F_module_name_library_template: "{library_lower}"
  F_name_impl_template: "{library_lower}_{underscore_name}{function_suffix}"
  F_name_generic_template: "{library_lower}_{underscore_name}"

declarations:
- decl: class TestMesh
  declarations:
  - decl: TestMesh()   +name(new)
  - decl: ~TestMesh()  +name(delete)
  - decl: void setupContactMeshHex(int numElemsX1, int numElemsY1, int numElemsZ1, 
                                   double xMin1, double yMin1, double zMin1,
                                   double xMax1, double yMax1, double zMax1,
                                   int numElemsX2, int numElemsY2, int numElemsZ2,
                                   double xMin2, double yMin2, double zMin2, 
                                   double xMax2, double yMax2, double zMax2,
                                   double thetaMortar, double thetaNonmortar )
  - decl: int numTotalNodes  +readonly;
  - decl: int numMortarFaces +readonly;
  - decl: int numNonmortarFaces  +readonly;

  - decl: double* getX() const  +dimension(numTotalNodes)
  - decl: double* getY() const  +dimension(numTotalNodes)
  - decl: double* getZ() const  +dimension(numTotalNodes)

  - decl: int getMortarFaceConnectivitySize() const;
  - decl: int* getMortarFaceConnectivity() const  +dimension(getMortarFaceConnectivitySize())

  - decl: int getNonmortarFaceConnectivitySize() const;
  - decl: int* getNonmortarFaceConnectivity() const  +dimension(getNonmortarFaceConnectivitySize())
